# -*- mode: ruby -*-
# vi: set ft=ruby :

servers = [
  { :hostname => "controller", :ip1 => "192.168.33.10", :ip2 => "192.168.10.10", :cpu => "1", :memory => "512" },
  { :hostname => "hypervisor", :ip1 => "192.168.33.20", :ip2 => "192.168.10.20", :cpu => "1", :memory => "512" },
]

controller_index = 0

Vagrant.configure("2") do |config|
  config.vm.box = "generic/ubuntu2004"
  config.vm.box_version = "4.2.16"

  servers.each do |conf|
    config.vm.define conf[:hostname] do |node|
      node.vm.hostname = conf[:hostname]
      node.vm.network "private_network", ip: conf[:ip1]
      node.vm.network "private_network", ip: conf[:ip2]
      
      ["libvirt", "virtualbox"].each do |provider|
        config.vm.provider provider do |vb|
          vb.memory = conf[:memory]
          vb.cpus = conf[:cpu]
        end
      end

      # Unset IP on eth2, which will used for testing OVN localnet
      node.vm.provision :shell do |s|
        s.inline = 'ip addr del $1/24 dev eth2'
        s.args = "#{conf[:ip2]}"
      end

      # All nodes required packages
      node.vm.provision "shell", inline: <<-SHELL
        # Use Google DNS
        sed -i '/^DNS/c\DNS=8.8.8.8' /etc/systemd/resolved.conf
        systemctl restart systemd-resolved.service 

        # change repoisitory mirror
        sed -i 's/us.archive.ubuntu.com/free.nchc.org.tw/g' /etc/apt/sources.list
        sed -i 's/security.ubuntu.com/free.nchc.org.tw/g' /etc/apt/sources.list

        # clone sample
        git clone https://github.com/ogre0403/iTHome-2023.git /opt/iTHome-2023

        # Install OVN packges
        apt-get update
        apt-get -y install build-essential fakeroot net-tools bridge-utils
        apt-get -y install python-six openssl
        apt-get -y install openvswitch-switch openvswitch-common
        apt-get -y install ovn-common ovn-host
      SHELL

      # controller required configuration
      if conf[:hostname] == "controller"
        node.vm.provision :shell do |s|
          s.inline = <<-SHELL
            apt-get -y install ovn-central
            ovn-nbctl set-connection ptcp:6641:$1 
            ovn-sbctl set-connection ptcp:6642:$1
          SHELL
          s.args = "#{conf[:ip1]}"
        end
      end

      # All nodes required configuration
      node.vm.provision :shell do |s|
        s.inline = <<-SHELL
          ovs-vsctl set open . external-ids:ovn-remote=tcp:$1:6642
          ovs-vsctl set open . external-ids:ovn-encap-type=geneve
          ovs-vsctl set open . external-ids:ovn-encap-ip=$2
        SHELL
        s.args = "#{servers[0][:ip1]} #{conf[:ip1]}"
      end  

    end
  end
end  

