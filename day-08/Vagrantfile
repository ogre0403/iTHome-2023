# -*- mode: ruby -*-
# vi: set ft=ruby :

ENV['VAGRANT_NO_PARALLEL'] = 'yes'

servers = [
  # { :hostname => "compute-01", :ip1 => "192.168.33.20", :ip2 => "192.168.10.20", :cpu => "1", :memory => "4096" },
  # { :hostname => "compute-02", :ip1 => "192.168.33.30", :ip2 => "192.168.10.30", :cpu => "1", :memory => "4096" },
  { :hostname => "controller", :ip1 => "192.168.33.10", :ip2 => "192.168.10.10", :cpu => "1", :memory => "10240" },
]


Vagrant.configure("2") do |config|

  config.vm.box = "generic/centos8s"
  config.vm.box_version = "4.2.16"

  config.vm.synced_folder "../", "/libvirt",    disabled: true, type: "9p", mount: true, accessmode: "mapped"
  config.vm.synced_folder "../", "/virtualbox", disabled: true

  servers.each do |conf|
    config.vm.define conf[:hostname] do |node|
      node.vm.hostname = conf[:hostname]
      node.vm.network "private_network", ip: conf[:ip1]
      node.vm.network "private_network", ip: conf[:ip2]
      
      # configure hardware for different provider
      ["libvirt", "virtualbox"].each do |provider|
        config.vm.provider provider do |vb|
          vb.memory = conf[:memory]
          vb.cpus = conf[:cpu]
        end
      end

      node.vm.provision "shell", inline: <<-SHELL
        rm -f /etc/yum.repos.d/epel*
      SHELL

      node.vm.provision "shell", inline: <<-SHELL
        # https://www.rdoproject.org/install/packstack/
        # install network-scripts explicitly 
        dnf install network-scripts -y
        
        # Disable firewalld and NetworkManager
        systemctl disable firewalld
        systemctl stop firewalld
        systemctl disable NetworkManager
        systemctl stop NetworkManager
        systemctl enable network
        systemctl start network

        dnf config-manager --enable powertools
        dnf install -y centos-release-openstack-yoga

        # Install Packstack Installer
        dnf install -y openstack-packstack

        # Disable selinux enforcing mode
        setenforce 0
        sed -i s/^SELINUX=.*$/SELINUX=disabled/ /etc/selinux/config
      SHELL

      node.vm.provision "shell", inline: <<-SHELL
        # install tool
        dnf install -y bridge-utils jq tcpdump
        echo "abbrev() { a='[0-9a-fA-F]' b=\$a\$a c=\$b\$b; sed \"s/\$b-\$c-\$c-\$c-\$c\$c\$c//g\"; }" >> /root/.bashrc
      SHELL

      if conf[:hostname] == "controller"
        node.vm.provision "shell", inline: <<-SHELL
          packstack                                          \
            --allinone                                       \
            --nova-libvirt-virt-type=kvm                     \
            --keystone-admin-passwd=password                 \
            --os-debug-mode=y                                \
            --provision-demo=n                               \
            --os-neutron-ml2-type-drivers=local              \
            --os-neutron-ml2-tenant-network-types=local      \
            --os-neutron-ml2-mechanism-drivers=ovn           \
            --os-neutron-l2-agent=ovn                        \
            --os-cinder-install=n                            \
            --os-swift-install=n                             \
            --os-aodh-install=n                              \
            --os-ceilometer-install=n
        SHELL

        node.vm.provision "shell", inline: <<-SHELL
          ## create cirros image
          wget https://download.cirros-cloud.net/0.6.2/cirros-0.6.2-x86_64-disk.img -O /root/cirros-0.6.2-x86_64-disk.img
          source /root/keystonerc_admin
          openstack image create cirros  --disk-format qcow2 --file /root/cirros-0.6.2-x86_64-disk.img --public
        SHELL
      end

      # force sync time
      node.vm.provision :shell, :run => 'always' do |s|
        s.inline = 'chronyc -a makestep'
      end

    end
  end
end  

